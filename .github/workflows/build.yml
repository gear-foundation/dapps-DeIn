name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 0 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous workflow runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Artifact cache
        uses: Swatinem/rust-cache@v2

      - name: Remove binaries from cache
        run: rm -vf target/wasm32-unknown-unknown/release/*.wasm

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Install binaryen
        run: |
          wget -c https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz -O - | tar -xz -C .
          sudo cp binaryen-version_110/bin/wasm-opt /usr/bin/
      - name: Check fmt
        run: make fmt-check

      - name: Run linter
        run: make linter

      - name: Run tests
        run: make test

      - name: Build
        run: make build

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install

      - name: Generate dns env file
        run: node dev/generateEnv.js dns-frontend/.env
        env:
          PATH_TO_META: ./target/wasm32-unknown-unknown/release/dns.meta.wasm
          PROGRAM_ID: ${{ secrets.DNS_PROGRAM_ID }}

      - name: Generate goc env file
        run: node dev/generateEnv.js goc-frontend/.env
        env:
          PATH_TO_META: ./target/wasm32-unknown-unknown/release/game_of_chance.meta.wasm
          PROGRAM_ID: ${{ secrets.GOC_PROGRAM_ID }}

      - name: Build frontend
        run: sudo yarn build:all

      - name: Copy build
        run: |
          cp dns-frontend/build/dns.html .
          cp goc-frontend/build/goc.html .

      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          path: ./target/wasm32-unknown-unknown/release/*.wasm

      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          path: ./*.html

  upload:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build
          draft: false
          fail_on_unmatched_files: true
          files: artifact/*
